/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { BankAccountRequest } from "./BankAccountRequest.js";
import { CardRequest } from "./CardRequest.js";
import { CheckRequest } from "./CheckRequest.js";
import { CustomPaymentMethodRequest } from "./CustomPaymentMethodRequest.js";
import { PaymentMethodBaseRequest } from "./PaymentMethodBaseRequest.js";
import { UtilityPaymentMethodRequest } from "./UtilityPaymentMethodRequest.js";

export const PaymentMethodRequest: core.serialization.Schema<
    serializers.PaymentMethodRequest.Raw,
    Mercoa.PaymentMethodRequest
> = core.serialization
    .union("type", {
        bankAccount: BankAccountRequest,
        card: CardRequest,
        check: CheckRequest,
        custom: CustomPaymentMethodRequest,
        offPlatform: PaymentMethodBaseRequest,
        utility: UtilityPaymentMethodRequest,
        wallet: PaymentMethodBaseRequest,
    })
    .transform<Mercoa.PaymentMethodRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentMethodRequest {
    export type Raw =
        | PaymentMethodRequest.BankAccount
        | PaymentMethodRequest.Card
        | PaymentMethodRequest.Check
        | PaymentMethodRequest.Custom
        | PaymentMethodRequest.OffPlatform
        | PaymentMethodRequest.Utility
        | PaymentMethodRequest.Wallet;

    export interface BankAccount extends BankAccountRequest.Raw {
        type: "bankAccount";
    }

    export interface Card extends CardRequest.Raw {
        type: "card";
    }

    export interface Check extends CheckRequest.Raw {
        type: "check";
    }

    export interface Custom extends CustomPaymentMethodRequest.Raw {
        type: "custom";
    }

    export interface OffPlatform extends PaymentMethodBaseRequest.Raw {
        type: "offPlatform";
    }

    export interface Utility extends UtilityPaymentMethodRequest.Raw {
        type: "utility";
    }

    export interface Wallet extends PaymentMethodBaseRequest.Raw {
        type: "wallet";
    }
}
