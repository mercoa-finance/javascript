/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const PaymentMethodRequest: core.serialization.Schema<
    serializers.PaymentMethodRequest.Raw,
    Mercoa.PaymentMethodRequest
> = core.serialization
    .union("type", {
        bankAccount: core.serialization.lazyObject(async () => (await import("../../..")).BankAccountRequest),
        card: core.serialization.lazyObject(async () => (await import("../../..")).CardRequest),
        check: core.serialization.lazyObject(async () => (await import("../../..")).CheckRequest),
        custom: core.serialization.lazyObject(async () => (await import("../../..")).CustomPaymentMethodRequest),
        offPlatform: core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodBaseRequest),
    })
    .transform<Mercoa.PaymentMethodRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentMethodRequest {
    type Raw =
        | PaymentMethodRequest.BankAccount
        | PaymentMethodRequest.Card
        | PaymentMethodRequest.Check
        | PaymentMethodRequest.Custom
        | PaymentMethodRequest.OffPlatform;

    interface BankAccount extends serializers.BankAccountRequest.Raw {
        type: "bankAccount";
    }

    interface Card extends serializers.CardRequest.Raw {
        type: "card";
    }

    interface Check extends serializers.CheckRequest.Raw {
        type: "check";
    }

    interface Custom extends serializers.CustomPaymentMethodRequest.Raw {
        type: "custom";
    }

    interface OffPlatform extends serializers.PaymentMethodBaseRequest.Raw {
        type: "offPlatform";
    }
}
