/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { CustomPaymentMethodSchemaId } from "./CustomPaymentMethodSchemaId.js";
import { CustomPaymentMethodSchemaResponse } from "./CustomPaymentMethodSchemaResponse.js";
import { PaymentMethodBaseResponse } from "./PaymentMethodBaseResponse.js";

export const CustomPaymentMethodResponse: core.serialization.ObjectSchema<
    serializers.CustomPaymentMethodResponse.Raw,
    Mercoa.CustomPaymentMethodResponse
> = core.serialization
    .object({
        foreignId: core.serialization.string().optional(),
        accountName: core.serialization.string().optional(),
        accountNumber: core.serialization.string().optional(),
        availableBalance: core.serialization.number().optional(),
        schemaId: CustomPaymentMethodSchemaId,
        schema: CustomPaymentMethodSchemaResponse,
        data: core.serialization.record(core.serialization.string(), core.serialization.string()),
    })
    .extend(PaymentMethodBaseResponse);

export declare namespace CustomPaymentMethodResponse {
    export interface Raw extends PaymentMethodBaseResponse.Raw {
        foreignId?: string | null;
        accountName?: string | null;
        accountNumber?: string | null;
        availableBalance?: number | null;
        schemaId: CustomPaymentMethodSchemaId.Raw;
        schema: CustomPaymentMethodSchemaResponse.Raw;
        data: Record<string, string>;
    }
}
