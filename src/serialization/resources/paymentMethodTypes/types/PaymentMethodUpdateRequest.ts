/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { CustomPaymentMethodUpdateRequest } from "./CustomPaymentMethodUpdateRequest";
import { BankAccountUpdateRequest } from "./BankAccountUpdateRequest";
import { PaymentMethodBaseRequest } from "./PaymentMethodBaseRequest";

export const PaymentMethodUpdateRequest: core.serialization.Schema<
    serializers.PaymentMethodUpdateRequest.Raw,
    Mercoa.PaymentMethodUpdateRequest
> = core.serialization
    .union("type", {
        custom: CustomPaymentMethodUpdateRequest,
        bankAccount: BankAccountUpdateRequest,
        card: PaymentMethodBaseRequest,
        check: PaymentMethodBaseRequest,
        offPlatform: PaymentMethodBaseRequest,
        utility: PaymentMethodBaseRequest,
    })
    .transform<Mercoa.PaymentMethodUpdateRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentMethodUpdateRequest {
    export type Raw =
        | PaymentMethodUpdateRequest.Custom
        | PaymentMethodUpdateRequest.BankAccount
        | PaymentMethodUpdateRequest.Card
        | PaymentMethodUpdateRequest.Check
        | PaymentMethodUpdateRequest.OffPlatform
        | PaymentMethodUpdateRequest.Utility;

    export interface Custom extends CustomPaymentMethodUpdateRequest.Raw {
        type: "custom";
    }

    export interface BankAccount extends BankAccountUpdateRequest.Raw {
        type: "bankAccount";
    }

    export interface Card extends PaymentMethodBaseRequest.Raw {
        type: "card";
    }

    export interface Check extends PaymentMethodBaseRequest.Raw {
        type: "check";
    }

    export interface OffPlatform extends PaymentMethodBaseRequest.Raw {
        type: "offPlatform";
    }

    export interface Utility extends PaymentMethodBaseRequest.Raw {
        type: "utility";
    }
}
