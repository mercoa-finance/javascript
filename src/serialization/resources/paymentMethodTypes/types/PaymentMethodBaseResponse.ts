/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { PaymentMethodId } from "./PaymentMethodId";
import { CurrencyCode } from "./CurrencyCode";

export const PaymentMethodBaseResponse: core.serialization.ObjectSchema<
    serializers.PaymentMethodBaseResponse.Raw,
    Mercoa.PaymentMethodBaseResponse
> = core.serialization.object({
    id: PaymentMethodId,
    isDefaultSource: core.serialization.boolean(),
    isDefaultDestination: core.serialization.boolean(),
    supportedCurrencies: core.serialization.list(CurrencyCode),
    externalAccountingSystemId: core.serialization.string().optional(),
    frozen: core.serialization.boolean(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.string()),
    confirmedByEntity: core.serialization.boolean().optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace PaymentMethodBaseResponse {
    export interface Raw {
        id: PaymentMethodId.Raw;
        isDefaultSource: boolean;
        isDefaultDestination: boolean;
        supportedCurrencies: CurrencyCode.Raw[];
        externalAccountingSystemId?: string | null;
        frozen: boolean;
        metadata: Record<string, string>;
        confirmedByEntity?: boolean | null;
        createdAt: string;
        updatedAt: string;
    }
}
