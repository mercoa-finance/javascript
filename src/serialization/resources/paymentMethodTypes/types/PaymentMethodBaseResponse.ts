/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const PaymentMethodBaseResponse: core.serialization.ObjectSchema<
    serializers.PaymentMethodBaseResponse.Raw,
    Mercoa.PaymentMethodBaseResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).PaymentMethodId),
    isDefaultSource: core.serialization.boolean(),
    isDefaultDestination: core.serialization.boolean(),
    supportedCurrencies: core.serialization.list(
        core.serialization.lazy(async () => (await import("../../..")).CurrencyCode)
    ),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace PaymentMethodBaseResponse {
    interface Raw {
        id: serializers.PaymentMethodId.Raw;
        isDefaultSource: boolean;
        isDefaultDestination: boolean;
        supportedCurrencies: serializers.CurrencyCode.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
