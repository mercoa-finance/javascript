/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const BankAccountRequest: core.serialization.ObjectSchema<
    serializers.BankAccountRequest.Raw,
    Mercoa.BankAccountRequest
> = core.serialization
    .object({
        accountName: core.serialization.string().optional(),
        bankName: core.serialization.string(),
        routingNumber: core.serialization.string(),
        accountNumber: core.serialization.string(),
        accountType: core.serialization.lazy(async () => (await import("../../..")).BankType),
        plaid: core.serialization.lazyObject(async () => (await import("../../..")).PlaidLinkRequest).optional(),
        checkOptions: core.serialization
            .lazyObject(async () => (await import("../../..")).BankAccountCheckOptions)
            .optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodBaseRequest));

export declare namespace BankAccountRequest {
    interface Raw extends serializers.PaymentMethodBaseRequest.Raw {
        accountName?: string | null;
        bankName: string;
        routingNumber: string;
        accountNumber: string;
        accountType: serializers.BankType.Raw;
        plaid?: serializers.PlaidLinkRequest.Raw | null;
        checkOptions?: serializers.BankAccountCheckOptions.Raw | null;
    }
}
