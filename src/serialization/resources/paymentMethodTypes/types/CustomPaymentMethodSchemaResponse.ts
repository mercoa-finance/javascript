/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { CustomPaymentMethodSchemaId } from "./CustomPaymentMethodSchemaId.js";
import { CurrencyCode } from "./CurrencyCode.js";
import { CustomPaymentMethodSchemaField } from "./CustomPaymentMethodSchemaField.js";

export const CustomPaymentMethodSchemaResponse: core.serialization.ObjectSchema<
    serializers.CustomPaymentMethodSchemaResponse.Raw,
    Mercoa.CustomPaymentMethodSchemaResponse
> = core.serialization.object({
    id: CustomPaymentMethodSchemaId,
    name: core.serialization.string(),
    isSource: core.serialization.boolean(),
    isDestination: core.serialization.boolean(),
    supportedCurrencies: core.serialization.list(CurrencyCode),
    fields: core.serialization.list(CustomPaymentMethodSchemaField),
    estimatedProcessingTime: core.serialization.number(),
    maxAmount: core.serialization.number().optional(),
    minAmount: core.serialization.number().optional(),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace CustomPaymentMethodSchemaResponse {
    export interface Raw {
        id: CustomPaymentMethodSchemaId.Raw;
        name: string;
        isSource: boolean;
        isDestination: boolean;
        supportedCurrencies: CurrencyCode.Raw[];
        fields: CustomPaymentMethodSchemaField.Raw[];
        estimatedProcessingTime: number;
        maxAmount?: number | null;
        minAmount?: number | null;
        createdAt: string;
        updatedAt: string;
    }
}
