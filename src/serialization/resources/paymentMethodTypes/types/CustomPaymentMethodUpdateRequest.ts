/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const CustomPaymentMethodUpdateRequest: core.serialization.ObjectSchema<
    serializers.CustomPaymentMethodUpdateRequest.Raw,
    Mercoa.CustomPaymentMethodUpdateRequest
> = core.serialization
    .object({
        foreignId: core.serialization.string().optional(),
        accountName: core.serialization.string().optional(),
        accountNumber: core.serialization.string().optional(),
        schemaId: core.serialization
            .lazy(async () => (await import("../../..")).CustomPaymentMethodSchemaId)
            .optional(),
        data: core.serialization.record(core.serialization.string(), core.serialization.string()).optional(),
    })
    .extend(core.serialization.lazyObject(async () => (await import("../../..")).PaymentMethodBaseRequest));

export declare namespace CustomPaymentMethodUpdateRequest {
    interface Raw extends serializers.PaymentMethodBaseRequest.Raw {
        foreignId?: string | null;
        accountName?: string | null;
        accountNumber?: string | null;
        schemaId?: serializers.CustomPaymentMethodSchemaId.Raw | null;
        data?: Record<string, string> | null;
    }
}
