/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { BankAccountResponse } from "./BankAccountResponse";
import { CardResponse } from "./CardResponse";
import { CheckResponse } from "./CheckResponse";
import { CustomPaymentMethodResponse } from "./CustomPaymentMethodResponse";
import { PaymentMethodBaseResponse } from "./PaymentMethodBaseResponse";
import { UtilityPaymentMethodResponse } from "./UtilityPaymentMethodResponse";

export const PaymentMethodResponse: core.serialization.Schema<
    serializers.PaymentMethodResponse.Raw,
    Mercoa.PaymentMethodResponse
> = core.serialization
    .union("type", {
        bankAccount: BankAccountResponse,
        card: CardResponse,
        check: CheckResponse,
        custom: CustomPaymentMethodResponse,
        offPlatform: PaymentMethodBaseResponse,
        utility: UtilityPaymentMethodResponse,
    })
    .transform<Mercoa.PaymentMethodResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentMethodResponse {
    type Raw =
        | PaymentMethodResponse.BankAccount
        | PaymentMethodResponse.Card
        | PaymentMethodResponse.Check
        | PaymentMethodResponse.Custom
        | PaymentMethodResponse.OffPlatform
        | PaymentMethodResponse.Utility;

    interface BankAccount extends BankAccountResponse.Raw {
        type: "bankAccount";
    }

    interface Card extends CardResponse.Raw {
        type: "card";
    }

    interface Check extends CheckResponse.Raw {
        type: "check";
    }

    interface Custom extends CustomPaymentMethodResponse.Raw {
        type: "custom";
    }

    interface OffPlatform extends PaymentMethodBaseResponse.Raw {
        type: "offPlatform";
    }

    interface Utility extends UtilityPaymentMethodResponse.Raw {
        type: "utility";
    }
}
