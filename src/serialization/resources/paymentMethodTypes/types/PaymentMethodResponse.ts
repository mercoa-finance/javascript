/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { BankAccountResponse } from "./BankAccountResponse.js";
import { CardResponse } from "./CardResponse.js";
import { CheckResponse } from "./CheckResponse.js";
import { CustomPaymentMethodResponse } from "./CustomPaymentMethodResponse.js";
import { PaymentMethodBaseResponse } from "./PaymentMethodBaseResponse.js";
import { UtilityPaymentMethodResponse } from "./UtilityPaymentMethodResponse.js";
import { WalletResponse } from "./WalletResponse.js";

export const PaymentMethodResponse: core.serialization.Schema<
    serializers.PaymentMethodResponse.Raw,
    Mercoa.PaymentMethodResponse
> = core.serialization
    .union("type", {
        bankAccount: BankAccountResponse,
        card: CardResponse,
        check: CheckResponse,
        custom: CustomPaymentMethodResponse,
        offPlatform: PaymentMethodBaseResponse,
        utility: UtilityPaymentMethodResponse,
        wallet: WalletResponse,
    })
    .transform<Mercoa.PaymentMethodResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentMethodResponse {
    export type Raw =
        | PaymentMethodResponse.BankAccount
        | PaymentMethodResponse.Card
        | PaymentMethodResponse.Check
        | PaymentMethodResponse.Custom
        | PaymentMethodResponse.OffPlatform
        | PaymentMethodResponse.Utility
        | PaymentMethodResponse.Wallet;

    export interface BankAccount extends BankAccountResponse.Raw {
        type: "bankAccount";
    }

    export interface Card extends CardResponse.Raw {
        type: "card";
    }

    export interface Check extends CheckResponse.Raw {
        type: "check";
    }

    export interface Custom extends CustomPaymentMethodResponse.Raw {
        type: "custom";
    }

    export interface OffPlatform extends PaymentMethodBaseResponse.Raw {
        type: "offPlatform";
    }

    export interface Utility extends UtilityPaymentMethodResponse.Raw {
        type: "utility";
    }

    export interface Wallet extends WalletResponse.Raw {
        type: "wallet";
    }
}
