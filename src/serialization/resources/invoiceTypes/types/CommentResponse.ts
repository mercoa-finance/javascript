/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const CommentResponse: core.serialization.ObjectSchema<serializers.CommentResponse.Raw, Mercoa.CommentResponse> =
    core.serialization.object({
        id: core.serialization.string(),
        text: core.serialization.string(),
        user: core.serialization.lazyObject(async () => (await import("../../..")).EntityUserResponse).optional(),
        associatedApprovalAction: core.serialization
            .lazyObject(async () => (await import("../../..")).AssociatedApprovalAction)
            .optional(),
        createdAt: core.serialization.date(),
        updatedAt: core.serialization.date(),
    });

export declare namespace CommentResponse {
    interface Raw {
        id: string;
        text: string;
        user?: serializers.EntityUserResponse.Raw | null;
        associatedApprovalAction?: serializers.AssociatedApprovalAction.Raw | null;
        createdAt: string;
        updatedAt: string;
    }
}
