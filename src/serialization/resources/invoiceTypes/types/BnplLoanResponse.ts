/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { BnplLoanStatus } from "./BnplLoanStatus";
import { BnplOutstandingBalance } from "./BnplOutstandingBalance";
import { BnplLoanInstallment } from "./BnplLoanInstallment";
import { BnplCadence } from "./BnplCadence";

export const BnplLoanResponse: core.serialization.ObjectSchema<
    serializers.BnplLoanResponse.Raw,
    Mercoa.BnplLoanResponse
> = core.serialization.object({
    loanId: core.serialization.string(),
    businessExternalId: core.serialization.string(),
    dueDate: core.serialization.number(),
    originalPrincipalBalance: core.serialization.number(),
    drawDate: core.serialization.number(),
    repaidAmount: core.serialization.number(),
    paymentMethodId: core.serialization.string(),
    repaymentMethodId: core.serialization.string(),
    status: BnplLoanStatus,
    outstandingBalance: BnplOutstandingBalance,
    termsAgreementFile: core.serialization.string().optional(),
    invoiceUrl: core.serialization.string().optional(),
    invoiceAmount: core.serialization.number(),
    invoiceExternalId: core.serialization.string(),
    invoiceDueDate: core.serialization.number(),
    downPaymentAmount: core.serialization.number(),
    installments: core.serialization.list(BnplLoanInstallment),
    cadence: BnplCadence,
    baseFeeRate: core.serialization.number(),
});

export declare namespace BnplLoanResponse {
    export interface Raw {
        loanId: string;
        businessExternalId: string;
        dueDate: number;
        originalPrincipalBalance: number;
        drawDate: number;
        repaidAmount: number;
        paymentMethodId: string;
        repaymentMethodId: string;
        status: BnplLoanStatus.Raw;
        outstandingBalance: BnplOutstandingBalance.Raw;
        termsAgreementFile?: string | null;
        invoiceUrl?: string | null;
        invoiceAmount: number;
        invoiceExternalId: string;
        invoiceDueDate: number;
        downPaymentAmount: number;
        installments: BnplLoanInstallment.Raw[];
        cadence: BnplCadence.Raw;
        baseFeeRate: number;
    }
}
