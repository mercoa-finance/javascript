/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { CheckPaymentDestinationOptions } from "./CheckPaymentDestinationOptions";
import { BankAccountPaymentDestinationOptions } from "./BankAccountPaymentDestinationOptions";
import { UtilityPaymentDestinationOptions } from "./UtilityPaymentDestinationOptions";

export const PaymentDestinationOptions: core.serialization.Schema<
    serializers.PaymentDestinationOptions.Raw,
    Mercoa.PaymentDestinationOptions
> = core.serialization
    .union("type", {
        check: CheckPaymentDestinationOptions,
        bankAccount: BankAccountPaymentDestinationOptions,
        utility: UtilityPaymentDestinationOptions,
    })
    .transform<Mercoa.PaymentDestinationOptions>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace PaymentDestinationOptions {
    type Raw =
        | PaymentDestinationOptions.Check
        | PaymentDestinationOptions.BankAccount
        | PaymentDestinationOptions.Utility;

    interface Check extends CheckPaymentDestinationOptions.Raw {
        type: "check";
    }

    interface BankAccount extends BankAccountPaymentDestinationOptions.Raw {
        type: "bankAccount";
    }

    interface Utility extends UtilityPaymentDestinationOptions.Raw {
        type: "utility";
    }
}
