/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const ApprovalSlot: core.serialization.ObjectSchema<serializers.ApprovalSlot.Raw, Mercoa.ApprovalSlot> =
    core.serialization.object({
        approvalPolicyId: core.serialization.lazy(async () => (await import("../../..")).ApprovalPolicyId),
        approvalSlotId: core.serialization.lazy(async () => (await import("../../..")).ApprovalSlotId),
        assignedUserId: core.serialization.lazy(async () => (await import("../../..")).EntityUserId).optional(),
        action: core.serialization.lazy(async () => (await import("../../..")).ApproverAction),
        eligibleRoles: core.serialization.list(core.serialization.string()),
        eligibleUserIds: core.serialization.list(
            core.serialization.lazy(async () => (await import("../../..")).EntityUserId)
        ),
        date: core.serialization.date(),
    });

export declare namespace ApprovalSlot {
    interface Raw {
        approvalPolicyId: serializers.ApprovalPolicyId.Raw;
        approvalSlotId: serializers.ApprovalSlotId.Raw;
        assignedUserId?: serializers.EntityUserId.Raw | null;
        action: serializers.ApproverAction.Raw;
        eligibleRoles: string[];
        eligibleUserIds: serializers.EntityUserId.Raw[];
        date: string;
    }
}
