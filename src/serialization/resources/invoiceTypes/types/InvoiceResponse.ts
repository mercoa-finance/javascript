/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { InvoiceId } from "./InvoiceId";
import { InvoiceFailureType } from "./InvoiceFailureType";
import { InvoiceFailureReason } from "./InvoiceFailureReason";
import { InvoiceResponseBase } from "./InvoiceResponseBase";

export const InvoiceResponse: core.serialization.ObjectSchema<serializers.InvoiceResponse.Raw, Mercoa.InvoiceResponse> =
    core.serialization
        .object({
            id: InvoiceId,
            processedAt: core.serialization.date().optional(),
            settlementDate: core.serialization.date().optional(),
            foreignId: core.serialization.string().optional(),
            failureType: InvoiceFailureType.optional(),
            failureReason: InvoiceFailureReason.optional(),
        })
        .extend(InvoiceResponseBase);

export declare namespace InvoiceResponse {
    interface Raw extends InvoiceResponseBase.Raw {
        id: InvoiceId.Raw;
        processedAt?: string | null;
        settlementDate?: string | null;
        foreignId?: string | null;
        failureType?: InvoiceFailureType.Raw | null;
        failureReason?: InvoiceFailureReason.Raw | null;
    }
}
