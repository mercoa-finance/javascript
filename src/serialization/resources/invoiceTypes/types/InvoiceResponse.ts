/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { InvoiceId } from "./InvoiceId.js";
import { InvoiceFailureType } from "./InvoiceFailureType.js";
import { TransactionResponseWithoutInvoices } from "../../transaction/types/TransactionResponseWithoutInvoices.js";
import { VendorCreditId } from "../../vendorCreditTypes/types/VendorCreditId.js";
import { InvoiceResponseBase } from "./InvoiceResponseBase.js";

export const InvoiceResponse: core.serialization.ObjectSchema<serializers.InvoiceResponse.Raw, Mercoa.InvoiceResponse> =
    core.serialization
        .object({
            id: InvoiceId,
            processedAt: core.serialization.date().optional(),
            settlementDate: core.serialization.date().optional(),
            foreignId: core.serialization.string().optional(),
            failureType: InvoiceFailureType.optional(),
            transactions: core.serialization.list(TransactionResponseWithoutInvoices).optional(),
            vendorCreditIds: core.serialization.list(VendorCreditId).optional(),
        })
        .extend(InvoiceResponseBase);

export declare namespace InvoiceResponse {
    export interface Raw extends InvoiceResponseBase.Raw {
        id: InvoiceId.Raw;
        processedAt?: string | null;
        settlementDate?: string | null;
        foreignId?: string | null;
        failureType?: InvoiceFailureType.Raw | null;
        transactions?: TransactionResponseWithoutInvoices.Raw[] | null;
        vendorCreditIds?: VendorCreditId.Raw[] | null;
    }
}
