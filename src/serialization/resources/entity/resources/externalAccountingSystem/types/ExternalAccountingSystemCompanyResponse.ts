/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../index.js";
import * as Mercoa from "../../../../../../api/index.js";
import * as core from "../../../../../../core/index.js";
import { CodatCompanyResponse } from "./CodatCompanyResponse.js";
import { RutterCompanyResponse } from "./RutterCompanyResponse.js";

export const ExternalAccountingSystemCompanyResponse: core.serialization.Schema<
    serializers.entity.ExternalAccountingSystemCompanyResponse.Raw,
    Mercoa.entity.ExternalAccountingSystemCompanyResponse
> = core.serialization
    .union("type", {
        codat: CodatCompanyResponse,
        rutter: RutterCompanyResponse,
        none: CodatCompanyResponse,
    })
    .transform<Mercoa.entity.ExternalAccountingSystemCompanyResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExternalAccountingSystemCompanyResponse {
    export type Raw =
        | ExternalAccountingSystemCompanyResponse.Codat
        | ExternalAccountingSystemCompanyResponse.Rutter
        | ExternalAccountingSystemCompanyResponse.None;

    export interface Codat extends CodatCompanyResponse.Raw {
        type: "codat";
    }

    export interface Rutter extends RutterCompanyResponse.Raw {
        type: "rutter";
    }

    export interface None extends CodatCompanyResponse.Raw {
        type: "none";
    }
}
