/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { TransactionResponseAchBase } from "./TransactionResponseAchBase";
import { TransactionResponseMailedCheckBase } from "./TransactionResponseMailedCheckBase";
import { TransactionResponseBase } from "./TransactionResponseBase";

export const TransactionResponseWithoutInvoices: core.serialization.Schema<
    serializers.TransactionResponseWithoutInvoices.Raw,
    Mercoa.TransactionResponseWithoutInvoices
> = core.serialization
    .union("type", {
        bankAccountToBankAccount: TransactionResponseAchBase,
        bankAccountToMailedCheck: TransactionResponseMailedCheckBase,
        bankAccountToWallet: TransactionResponseAchBase,
        cardToWallet: TransactionResponseBase,
        walletToBankAccount: TransactionResponseAchBase,
        custom: TransactionResponseBase,
        offPlatform: TransactionResponseBase,
    })
    .transform<Mercoa.TransactionResponseWithoutInvoices>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace TransactionResponseWithoutInvoices {
    type Raw =
        | TransactionResponseWithoutInvoices.BankAccountToBankAccount
        | TransactionResponseWithoutInvoices.BankAccountToMailedCheck
        | TransactionResponseWithoutInvoices.BankAccountToWallet
        | TransactionResponseWithoutInvoices.CardToWallet
        | TransactionResponseWithoutInvoices.WalletToBankAccount
        | TransactionResponseWithoutInvoices.Custom
        | TransactionResponseWithoutInvoices.OffPlatform;

    interface BankAccountToBankAccount extends TransactionResponseAchBase.Raw {
        type: "bankAccountToBankAccount";
    }

    interface BankAccountToMailedCheck extends TransactionResponseMailedCheckBase.Raw {
        type: "bankAccountToMailedCheck";
    }

    interface BankAccountToWallet extends TransactionResponseAchBase.Raw {
        type: "bankAccountToWallet";
    }

    interface CardToWallet extends TransactionResponseBase.Raw {
        type: "cardToWallet";
    }

    interface WalletToBankAccount extends TransactionResponseAchBase.Raw {
        type: "walletToBankAccount";
    }

    interface Custom extends TransactionResponseBase.Raw {
        type: "custom";
    }

    interface OffPlatform extends TransactionResponseBase.Raw {
        type: "offPlatform";
    }
}
