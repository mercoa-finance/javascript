/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { ContractRecurrenceId } from "./ContractRecurrenceId";
import { ContractId } from "./ContractId";
import { ContractInvoiceSchema } from "./ContractInvoiceSchema";
import { InvoiceId } from "../../invoiceTypes/types/InvoiceId";

export const ContractRecurrenceResponse: core.serialization.ObjectSchema<
    serializers.ContractRecurrenceResponse.Raw,
    Mercoa.ContractRecurrenceResponse
> = core.serialization.object({
    id: ContractRecurrenceId,
    contractId: ContractId,
    rrule: core.serialization.string(),
    justification: core.serialization.string(),
    filteredContractSummary: core.serialization.string(),
    invoiceSchema: ContractInvoiceSchema,
    createdInvoiceIds: core.serialization.list(InvoiceId),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace ContractRecurrenceResponse {
    interface Raw {
        id: ContractRecurrenceId.Raw;
        contractId: ContractId.Raw;
        rrule: string;
        justification: string;
        filteredContractSummary: string;
        invoiceSchema: ContractInvoiceSchema.Raw;
        createdInvoiceIds: InvoiceId.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
