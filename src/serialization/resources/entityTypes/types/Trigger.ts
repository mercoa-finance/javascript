/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const Trigger: core.serialization.Schema<serializers.Trigger.Raw, Mercoa.Trigger> = core.serialization
    .union("type", {
        amount: core.serialization.lazyObject(async () => (await import("../../..")).AmountTrigger),
        vendor: core.serialization.lazyObject(async () => (await import("../../..")).VendorTrigger),
        metadata: core.serialization.lazyObject(async () => (await import("../../..")).MetadataTrigger),
    })
    .transform<Mercoa.Trigger>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Trigger {
    type Raw = Trigger.Amount | Trigger.Vendor | Trigger.Metadata;

    interface Amount extends serializers.AmountTrigger.Raw {
        type: "amount";
    }

    interface Vendor extends serializers.VendorTrigger.Raw {
        type: "vendor";
    }

    interface Metadata extends serializers.MetadataTrigger.Raw {
        type: "metadata";
    }
}
