/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { MetadataCustomizationRequest } from "../../customizationTypes/types/MetadataCustomizationRequest.js";
import { PaymentMethodCustomizationRequest } from "../../customizationTypes/types/PaymentMethodCustomizationRequest.js";
import { OcrCustomizationResponse } from "../../customizationTypes/types/OcrCustomizationResponse.js";
import { NotificationCustomizationRequest } from "../../customizationTypes/types/NotificationCustomizationRequest.js";
import { WorkflowCustomizationRequest } from "../../customizationTypes/types/WorkflowCustomizationRequest.js";
import { InvoiceCustomizationResponse } from "../../customizationTypes/types/InvoiceCustomizationResponse.js";
import { FeeCustomizationRequest } from "../../customizationTypes/types/FeeCustomizationRequest.js";
import { RolePermissionRequest } from "../../organizationTypes/types/RolePermissionRequest.js";
import { Permission } from "../../organizationTypes/types/Permission.js";

export const EntityCustomizationResponse: core.serialization.ObjectSchema<
    serializers.EntityCustomizationResponse.Raw,
    Mercoa.EntityCustomizationResponse
> = core.serialization.object({
    metadata: core.serialization.list(MetadataCustomizationRequest),
    paymentSource: core.serialization.list(PaymentMethodCustomizationRequest),
    backupDisbursement: core.serialization.list(PaymentMethodCustomizationRequest),
    paymentDestination: core.serialization.list(PaymentMethodCustomizationRequest),
    ocr: OcrCustomizationResponse,
    notifications: NotificationCustomizationRequest,
    workflow: WorkflowCustomizationRequest,
    invoice: InvoiceCustomizationResponse,
    fees: FeeCustomizationRequest,
    rolePermissions: RolePermissionRequest,
});

export declare namespace EntityCustomizationResponse {
    export interface Raw {
        metadata: MetadataCustomizationRequest.Raw[];
        paymentSource: PaymentMethodCustomizationRequest.Raw[];
        backupDisbursement: PaymentMethodCustomizationRequest.Raw[];
        paymentDestination: PaymentMethodCustomizationRequest.Raw[];
        ocr: OcrCustomizationResponse.Raw;
        notifications: NotificationCustomizationRequest.Raw;
        workflow: WorkflowCustomizationRequest.Raw;
        invoice: InvoiceCustomizationResponse.Raw;
        fees: FeeCustomizationRequest.Raw;
        rolePermissions: RolePermissionRequest.Raw;
    }
}
