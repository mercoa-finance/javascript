/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const EntityUserResponse: core.serialization.ObjectSchema<
    serializers.EntityUserResponse.Raw,
    Mercoa.EntityUserResponse
> = core.serialization.object({
    id: core.serialization.lazy(async () => (await import("../../..")).EntityUserId),
    foreignId: core.serialization.string().optional(),
    email: core.serialization.string().optional(),
    name: core.serialization.string().optional(),
    roles: core.serialization.list(core.serialization.string()),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace EntityUserResponse {
    interface Raw {
        id: serializers.EntityUserId.Raw;
        foreignId?: string | null;
        email?: string | null;
        name?: string | null;
        roles: string[];
        createdAt: string;
        updatedAt: string;
    }
}
