/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { ApproverRule } from "./ApproverRule.js";
import { AutomaticRule } from "./AutomaticRule.js";

export const Rule: core.serialization.Schema<serializers.Rule.Raw, Mercoa.Rule> = core.serialization
    .union("type", {
        approver: ApproverRule,
        automatic: AutomaticRule,
    })
    .transform<Mercoa.Rule>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace Rule {
    export type Raw = Rule.Approver | Rule.Automatic;

    export interface Approver extends ApproverRule.Raw {
        type: "approver";
    }

    export interface Automatic extends AutomaticRule.Raw {
        type: "automatic";
    }
}
