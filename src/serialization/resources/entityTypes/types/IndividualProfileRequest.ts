/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const IndividualProfileRequest: core.serialization.ObjectSchema<
    serializers.IndividualProfileRequest.Raw,
    Mercoa.IndividualProfileRequest
> = core.serialization.object({
    email: core.serialization.string().optional(),
    name: core.serialization.lazyObject(async () => (await import("../../..")).FullName),
    phone: core.serialization.lazyObject(async () => (await import("../../..")).PhoneNumber).optional(),
    address: core.serialization.lazyObject(async () => (await import("../../..")).Address).optional(),
    birthDate: core.serialization.lazyObject(async () => (await import("../../..")).BirthDate).optional(),
    governmentId: core.serialization.property(
        "governmentID",
        core.serialization.lazyObject(async () => (await import("../../..")).IndividualGovernmentId).optional()
    ),
});

export declare namespace IndividualProfileRequest {
    interface Raw {
        email?: string | null;
        name: serializers.FullName.Raw;
        phone?: serializers.PhoneNumber.Raw | null;
        address?: serializers.Address.Raw | null;
        birthDate?: serializers.BirthDate.Raw | null;
        governmentID?: serializers.IndividualGovernmentId.Raw | null;
    }
}
