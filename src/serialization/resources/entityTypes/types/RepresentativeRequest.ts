/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index.js";
import * as Mercoa from "../../../../api/index.js";
import * as core from "../../../../core/index.js";
import { FullName } from "../../commons/types/FullName.js";
import { PhoneNumber } from "../../commons/types/PhoneNumber.js";
import { Address } from "../../commons/types/Address.js";
import { BirthDate } from "../../commons/types/BirthDate.js";
import { IndividualGovernmentId } from "../../commons/types/IndividualGovernmentId.js";
import { Responsibilities } from "./Responsibilities.js";

export const RepresentativeRequest: core.serialization.ObjectSchema<
    serializers.RepresentativeRequest.Raw,
    Mercoa.RepresentativeRequest
> = core.serialization.object({
    name: FullName,
    phone: PhoneNumber.optional(),
    email: core.serialization.string().optional(),
    address: Address,
    birthDate: BirthDate,
    governmentId: core.serialization.property("governmentID", IndividualGovernmentId),
    responsibilities: Responsibilities,
});

export declare namespace RepresentativeRequest {
    export interface Raw {
        name: FullName.Raw;
        phone?: PhoneNumber.Raw | null;
        email?: string | null;
        address: Address.Raw;
        birthDate: BirthDate.Raw;
        governmentID: IndividualGovernmentId.Raw;
        responsibilities: Responsibilities.Raw;
    }
}
