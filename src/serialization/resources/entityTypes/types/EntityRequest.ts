/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const EntityRequest: core.serialization.ObjectSchema<serializers.EntityRequest.Raw, Mercoa.EntityRequest> =
    core.serialization.object({
        foreignId: core.serialization.string().optional(),
        emailTo: core.serialization.string().optional(),
        emailToAlias: core.serialization.list(core.serialization.string()).optional(),
        isCustomer: core.serialization.boolean(),
        accountType: core.serialization.lazy(async () => (await import("../../..")).AccountType),
        profile: core.serialization.lazyObject(async () => (await import("../../..")).ProfileRequest),
        isPayor: core.serialization.boolean(),
        isPayee: core.serialization.boolean(),
        logo: core.serialization.string().optional(),
    });

export declare namespace EntityRequest {
    interface Raw {
        foreignId?: string | null;
        emailTo?: string | null;
        emailToAlias?: string[] | null;
        isCustomer: boolean;
        accountType: serializers.AccountType.Raw;
        profile: serializers.ProfileRequest.Raw;
        isPayor: boolean;
        isPayee: boolean;
        logo?: string | null;
    }
}
