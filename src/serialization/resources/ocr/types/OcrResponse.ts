/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const OcrResponse: core.serialization.ObjectSchema<serializers.OcrResponse.Raw, Mercoa.OcrResponse> =
    core.serialization.object({
        invoice: core.serialization.lazyObject(async () => (await import("../../..")).InvoiceResponse),
        vendor: core.serialization.lazyObject(async () => (await import("../../..")).EntityResponse),
        check: core.serialization.lazyObject(async () => (await import("../../..")).CheckResponse).optional(),
        bankAccount: core.serialization
            .lazyObject(async () => (await import("../../..")).BankAccountResponse)
            .optional(),
    });

export declare namespace OcrResponse {
    interface Raw {
        invoice: serializers.InvoiceResponse.Raw;
        vendor: serializers.EntityResponse.Raw;
        check?: serializers.CheckResponse.Raw | null;
        bankAccount?: serializers.BankAccountResponse.Raw | null;
    }
}
