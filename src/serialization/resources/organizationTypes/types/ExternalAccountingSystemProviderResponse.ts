/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const ExternalAccountingSystemProviderResponse: core.serialization.Schema<
    serializers.ExternalAccountingSystemProviderResponse.Raw,
    Mercoa.ExternalAccountingSystemProviderResponse
> = core.serialization
    .union("type", {
        none: core.serialization.lazyObject(async () => (await import("../../..")).CodatProviderResponse),
        codat: core.serialization.lazyObject(async () => (await import("../../..")).CodatProviderResponse),
    })
    .transform<Mercoa.ExternalAccountingSystemProviderResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExternalAccountingSystemProviderResponse {
    type Raw = ExternalAccountingSystemProviderResponse.None | ExternalAccountingSystemProviderResponse.Codat;

    interface None extends serializers.CodatProviderResponse.Raw {
        type: "none";
    }

    interface Codat extends serializers.CodatProviderResponse.Raw {
        type: "codat";
    }
}
