/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { CodatProviderResponse } from "./CodatProviderResponse";
import { RutterProviderResponse } from "./RutterProviderResponse";

export const ExternalAccountingSystemProviderResponse: core.serialization.Schema<
    serializers.ExternalAccountingSystemProviderResponse.Raw,
    Mercoa.ExternalAccountingSystemProviderResponse
> = core.serialization
    .union("type", {
        none: CodatProviderResponse,
        codat: CodatProviderResponse,
        rutter: RutterProviderResponse,
    })
    .transform<Mercoa.ExternalAccountingSystemProviderResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExternalAccountingSystemProviderResponse {
    type Raw =
        | ExternalAccountingSystemProviderResponse.None
        | ExternalAccountingSystemProviderResponse.Codat
        | ExternalAccountingSystemProviderResponse.Rutter;

    interface None extends CodatProviderResponse.Raw {
        type: "none";
    }

    interface Codat extends CodatProviderResponse.Raw {
        type: "codat";
    }

    interface Rutter extends RutterProviderResponse.Raw {
        type: "rutter";
    }
}
