/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { OrganizationId } from "./OrganizationId";
import { PaymentMethodsResponse } from "./PaymentMethodsResponse";
import { EmailProviderResponse } from "./EmailProviderResponse";
import { ExternalAccountingSystemProviderResponse } from "./ExternalAccountingSystemProviderResponse";
import { ColorSchemeResponse } from "./ColorSchemeResponse";
import { OnboardingOptionsResponse } from "./OnboardingOptionsResponse";
import { MetadataSchema } from "./MetadataSchema";
import { NotificationEmailTemplateResponse } from "./NotificationEmailTemplateResponse";
import { EntityId } from "../../entityTypes/types/EntityId";
import { RolePermissionResponse } from "./RolePermissionResponse";
import { Permission } from "./Permission";

export const OrganizationResponse: core.serialization.ObjectSchema<
    serializers.OrganizationResponse.Raw,
    Mercoa.OrganizationResponse
> = core.serialization.object({
    id: OrganizationId,
    sandbox: core.serialization.boolean(),
    name: core.serialization.string(),
    logoUrl: core.serialization.string().optional(),
    websiteUrl: core.serialization.string().optional(),
    supportEmail: core.serialization.string().optional(),
    paymentMethods: PaymentMethodsResponse.optional(),
    emailProvider: EmailProviderResponse.optional(),
    externalAccountingSystemProvider: ExternalAccountingSystemProviderResponse.optional(),
    colorScheme: ColorSchemeResponse.optional(),
    payeeOnboardingOptions: OnboardingOptionsResponse.optional(),
    payorOnboardingOptions: OnboardingOptionsResponse.optional(),
    metadataSchema: core.serialization.list(MetadataSchema).optional(),
    notificationEmailTemplate: NotificationEmailTemplateResponse.optional(),
    customDomains: core.serialization.list(core.serialization.string()).optional(),
    organizationEntityId: EntityId.optional(),
    rolePermissions: RolePermissionResponse.optional(),
});

export declare namespace OrganizationResponse {
    export interface Raw {
        id: OrganizationId.Raw;
        sandbox: boolean;
        name: string;
        logoUrl?: string | null;
        websiteUrl?: string | null;
        supportEmail?: string | null;
        paymentMethods?: PaymentMethodsResponse.Raw | null;
        emailProvider?: EmailProviderResponse.Raw | null;
        externalAccountingSystemProvider?: ExternalAccountingSystemProviderResponse.Raw | null;
        colorScheme?: ColorSchemeResponse.Raw | null;
        payeeOnboardingOptions?: OnboardingOptionsResponse.Raw | null;
        payorOnboardingOptions?: OnboardingOptionsResponse.Raw | null;
        metadataSchema?: MetadataSchema.Raw[] | null;
        notificationEmailTemplate?: NotificationEmailTemplateResponse.Raw | null;
        customDomains?: string[] | null;
        organizationEntityId?: EntityId.Raw | null;
        rolePermissions?: RolePermissionResponse.Raw | null;
    }
}
