/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const OnboardingOptionsRequest: core.serialization.ObjectSchema<
    serializers.OnboardingOptionsRequest.Raw,
    Mercoa.OnboardingOptionsRequest
> = core.serialization.object({
    enableBusiness: core.serialization.boolean().optional(),
    enableIndividual: core.serialization.boolean().optional(),
    paymentMethod: core.serialization.boolean().optional(),
    business: core.serialization
        .lazyObject(async () => (await import("../../..")).BusinessOnboardingOptions)
        .optional(),
    individual: core.serialization
        .lazyObject(async () => (await import("../../..")).IndividualOnboardingOptions)
        .optional(),
});

export declare namespace OnboardingOptionsRequest {
    interface Raw {
        enableBusiness?: boolean | null;
        enableIndividual?: boolean | null;
        paymentMethod?: boolean | null;
        business?: serializers.BusinessOnboardingOptions.Raw | null;
        individual?: serializers.IndividualOnboardingOptions.Raw | null;
    }
}
