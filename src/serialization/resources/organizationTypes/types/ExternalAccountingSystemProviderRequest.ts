/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { CodatProviderRequest } from "./CodatProviderRequest";
import { RutterProviderRequest } from "./RutterProviderRequest";

export const ExternalAccountingSystemProviderRequest: core.serialization.Schema<
    serializers.ExternalAccountingSystemProviderRequest.Raw,
    Mercoa.ExternalAccountingSystemProviderRequest
> = core.serialization
    .union("type", {
        none: CodatProviderRequest,
        codat: CodatProviderRequest,
        rutter: RutterProviderRequest,
    })
    .transform<Mercoa.ExternalAccountingSystemProviderRequest>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ExternalAccountingSystemProviderRequest {
    export type Raw =
        | ExternalAccountingSystemProviderRequest.None
        | ExternalAccountingSystemProviderRequest.Codat
        | ExternalAccountingSystemProviderRequest.Rutter;

    export interface None extends CodatProviderRequest.Raw {
        type: "none";
    }

    export interface Codat extends CodatProviderRequest.Raw {
        type: "codat";
    }

    export interface Rutter extends RutterProviderRequest.Raw {
        type: "rutter";
    }
}
