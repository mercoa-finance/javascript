/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Mercoa from "../../../../api";
import * as core from "../../../../core";

export const NotificationConfigurationResponse: core.serialization.Schema<
    serializers.NotificationConfigurationResponse.Raw,
    Mercoa.NotificationConfigurationResponse
> = core.serialization
    .union("notificationType", {
        invoice: core.serialization.lazyObject(
            async () => (await import("../../..")).InvoiceNotificationConfigurationResponse
        ),
    })
    .transform<Mercoa.NotificationConfigurationResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace NotificationConfigurationResponse {
    type Raw = NotificationConfigurationResponse.Invoice;

    interface Invoice extends serializers.InvoiceNotificationConfigurationResponse.Raw {
        notificationType: "invoice";
    }
}
