/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { ValidatePaymentGatewayPendingResponse } from "./ValidatePaymentGatewayPendingResponse";
import { ValidatePaymentGatewaySuccessResponse } from "./ValidatePaymentGatewaySuccessResponse";
import { ValidatePaymentGatewayFailedResponse } from "./ValidatePaymentGatewayFailedResponse";

export const ValidatePaymentGatewayResponse: core.serialization.Schema<
    serializers.ValidatePaymentGatewayResponse.Raw,
    Mercoa.ValidatePaymentGatewayResponse
> = core.serialization
    .union("jobStatus", {
        pending: ValidatePaymentGatewayPendingResponse,
        success: ValidatePaymentGatewaySuccessResponse,
        failed: ValidatePaymentGatewayFailedResponse,
    })
    .transform<Mercoa.ValidatePaymentGatewayResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ValidatePaymentGatewayResponse {
    export type Raw =
        | ValidatePaymentGatewayResponse.Pending
        | ValidatePaymentGatewayResponse.Success
        | ValidatePaymentGatewayResponse.Failed;

    export interface Pending extends ValidatePaymentGatewayPendingResponse.Raw {
        jobStatus: "pending";
    }

    export interface Success extends ValidatePaymentGatewaySuccessResponse.Raw {
        jobStatus: "success";
    }

    export interface Failed extends ValidatePaymentGatewayFailedResponse.Raw {
        jobStatus: "failed";
    }
}
