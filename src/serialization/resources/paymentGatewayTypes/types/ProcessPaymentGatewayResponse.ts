/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { ProcessPaymentGatewayPendingResponse } from "./ProcessPaymentGatewayPendingResponse";
import { ProcessPaymentGatewaySuccessResponse } from "./ProcessPaymentGatewaySuccessResponse";
import { ProcessPaymentGatewayFailedResponse } from "./ProcessPaymentGatewayFailedResponse";

export const ProcessPaymentGatewayResponse: core.serialization.Schema<
    serializers.ProcessPaymentGatewayResponse.Raw,
    Mercoa.ProcessPaymentGatewayResponse
> = core.serialization
    .union("jobStatus", {
        pending: ProcessPaymentGatewayPendingResponse,
        success: ProcessPaymentGatewaySuccessResponse,
        failed: ProcessPaymentGatewayFailedResponse,
    })
    .transform<Mercoa.ProcessPaymentGatewayResponse>({
        transform: (value) => value,
        untransform: (value) => value,
    });

export declare namespace ProcessPaymentGatewayResponse {
    export type Raw =
        | ProcessPaymentGatewayResponse.Pending
        | ProcessPaymentGatewayResponse.Success
        | ProcessPaymentGatewayResponse.Failed;

    export interface Pending extends ProcessPaymentGatewayPendingResponse.Raw {
        jobStatus: "pending";
    }

    export interface Success extends ProcessPaymentGatewaySuccessResponse.Raw {
        jobStatus: "success";
    }

    export interface Failed extends ProcessPaymentGatewayFailedResponse.Raw {
        jobStatus: "failed";
    }
}
