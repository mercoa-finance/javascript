/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Mercoa from "../../../../api/index";
import * as core from "../../../../core";
import { PaymentGatewayAttempt } from "./PaymentGatewayAttempt";

export const ProcessPaymentGatewaySuccessResponse: core.serialization.ObjectSchema<
    serializers.ProcessPaymentGatewaySuccessResponse.Raw,
    Mercoa.ProcessPaymentGatewaySuccessResponse
> = core.serialization.object({
    jobId: core.serialization.string(),
    receiptUrl: core.serialization.string().optional(),
    invoiceAmount: core.serialization.number().optional(),
    gatewayAmount: core.serialization.number().optional(),
    vendorName: core.serialization.string().optional(),
    attempts: core.serialization.list(PaymentGatewayAttempt),
    createdAt: core.serialization.date(),
    updatedAt: core.serialization.date(),
});

export declare namespace ProcessPaymentGatewaySuccessResponse {
    export interface Raw {
        jobId: string;
        receiptUrl?: string | null;
        invoiceAmount?: number | null;
        gatewayAmount?: number | null;
        vendorName?: string | null;
        attempts: PaymentGatewayAttempt.Raw[];
        createdAt: string;
        updatedAt: string;
    }
}
