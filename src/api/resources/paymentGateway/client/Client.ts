/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments.js";
import * as core from "../../../../core/index.js";
import { Process } from "../resources/process/client/Client.js";
import { Validate } from "../resources/validate/client/Client.js";

export declare namespace PaymentGateway {
    export interface Options {
        environment?: core.Supplier<environments.MercoaEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        token: core.Supplier<core.BearerToken>;
        /** Override the X-API-Version header */
        xApiVersion?: "2024-08-01";
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
    }
}

export class PaymentGateway {
    protected readonly _options: PaymentGateway.Options;
    protected _process: Process | undefined;
    protected _validate: Validate | undefined;

    constructor(_options: PaymentGateway.Options) {
        this._options = _options;
    }

    public get process(): Process {
        return (this._process ??= new Process(this._options));
    }

    public get validate(): Validate {
        return (this._validate ??= new Validate(this._options));
    }
}
