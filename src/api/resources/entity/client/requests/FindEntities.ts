/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Mercoa from "../../../../index";

/**
 * @example
 *     {
 *         isCustomer: true,
 *         foreignId: "MY-DB-ID-12345",
 *         paymentMethods: true
 *     }
 */
export interface FindEntities {
    /**
     * If true, will include entity payment methods as part of the response
     */
    paymentMethods?: boolean;
    /**
     * If true, only entities with a direct relationship to the requesting organization will be returned. If false or not provided, all entities will be returned.
     */
    isCustomer?: boolean;
    /**
     * ID used to identify this entity in your system
     */
    foreignId?: string | string[];
    status?: Mercoa.EntityStatus | Mercoa.EntityStatus[];
    /**
     * If true, entities that are marked as payees will be returned.
     * If false or not provided, entities that are marked as payees will not be returned.
     */
    isPayee?: boolean;
    /**
     * If true or not provided, entities that are marked as payors will be returned.
     * If false, entities that are marked as payors will not be returned.
     */
    isPayor?: boolean;
    /**
     * Filter entities by name. Partial matches are supported.
     */
    name?: string;
    /**
     * If true, will return simple key/value metadata for the entity. For more complex metadata, use the Metadata API.
     */
    returnMetadata?: boolean;
    /**
     * Number of entities to return. Limit can range between 1 and 100, and the default is 10.
     */
    limit?: number;
    /**
     * The ID of the entity to start after. If not provided, the first page of entities will be returned.
     */
    startingAfter?: Mercoa.EntityId;
}
