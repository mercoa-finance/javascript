/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("Validate", () => {
    test("find", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            jobs: [
                {
                    jobStatus: "pending",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    createdAt: "2024-01-01T00:00:00Z",
                    updatedAt: "2024-01-01T00:00:00Z",
                },
                {
                    jobStatus: "success",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    paymentGatewayUrl:
                        "https://www.payment-gateway.com/invoice/pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    card: { eligibility: "ACCEPTED", fee: { type: "percentage", value: 2.5 } },
                    invoiceAmount: 150.75,
                    gatewayAmount: 155.5,
                    vendorName: "Acme Corporation",
                    createdAt: "2024-01-01T00:00:00Z",
                    updatedAt: "2024-01-01T00:00:00Z",
                },
                {
                    jobStatus: "failed",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    errorType: "NO_VALID_PAYMENT_GATEWAY_FOUND",
                    errorMessage: "No valid payment gateway was found in the document or HTML",
                    createdAt: "2024-01-01T00:00:00Z",
                    updatedAt: "2024-01-01T00:00:00Z",
                },
            ],
            hasMore: true,
        };
        server
            .mockEndpoint()
            .get("/payment-gateway/validation-jobs")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.paymentGateway.validate.find({
            status: "FAILED",
            startDate: new Date("2024-01-01T00:00:00.000Z"),
            endDate: new Date("2024-12-31T23:59:59.000Z"),
        });
        expect(response).toEqual({
            jobs: [
                {
                    jobStatus: "pending",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    updatedAt: new Date("2024-01-01T00:00:00.000Z"),
                },
                {
                    jobStatus: "success",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    paymentGatewayUrl:
                        "https://www.payment-gateway.com/invoice/pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    card: {
                        eligibility: "ACCEPTED",
                        fee: {
                            type: "percentage",
                            value: 2.5,
                        },
                    },
                    invoiceAmount: 150.75,
                    gatewayAmount: 155.5,
                    vendorName: "Acme Corporation",
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    updatedAt: new Date("2024-01-01T00:00:00.000Z"),
                },
                {
                    jobStatus: "failed",
                    jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
                    errorType: "NO_VALID_PAYMENT_GATEWAY_FOUND",
                    errorMessage: "No valid payment gateway was found in the document or HTML",
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    updatedAt: new Date("2024-01-01T00:00:00.000Z"),
                },
            ],
            hasMore: true,
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            type: "document",
            document:
                "data:application/pdf;base64,JVBERi0xLjEKJcKlwrHDqwoKMSAwIG9iagogIDw8IC9UeXBlIC9DYXRhbG9nCiAgICAgL1BhZ2VzIDIgMCBSCiAgPj4KZW5kb2JqCgoyIDAgb2JqCiAgPDwgL1R5cGUgL1BhZ2VzCiAgICAgL0tpZHMgWzMgMCBSXQogICAgIC9Db3VudCAxCiAgICAgL01lZGlhQm94IFswIDAgMzAwIDE0NF0KICA+PgplbmRvYmoKCjMgMCBvYmoKICA8PCAgL1R5cGUgL1BhZ2UKICAgICAgL1BhcmVudCAyIDAgUgogICAgICAvUmVzb3VyY2VzCiAgICAgICA8PCAvRm9udAogICAgICAgICAgIDw8IC9GMQogICAgICAgICAgICAgICA8PCAvVHlwZSAvRm9udAogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTEKICAgICAgICAgICAgICAgICAgL0Jhc2VGb250IC9UaW1lcy1Sb21hbgogICAgICAgICAgICAgICA+PgogICAgICAgICAgID4+CiAgICAgICA+PgogICAgICAvQ29udGVudHMgNCAwIFIKICA+PgplbmRvYmoKCjQgMCBvYmoKICA8PCAvTGVuZ3RoIDU1ID4+CnN0cmVhbQogIEJUCiAgICAvRjEgMTggVGYKICAgIDAgMCBUZAogICAgKEhlbGxvIFdvcmxkKSBUagogIEVUCmVuZHN0cmVhbQplbmRvYmoKCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAxOCAwMDAwMCBuIAowMDAwMDAwMDc3IDAwMDAwIG4gCjAwMDAwMDAxNzggMDAwMDAgbiAKMDAwMDAwMDQ1NyAwMDAwMCBuIAp0cmFpbGVyCiAgPDwgIC9Sb290IDEgMCBSCiAgICAgIC9TaXplIDUKICA+PgpzdGFydHhyZWYKNTY1CiUlRU9GCg==",
        };
        const rawResponseBody = {
            jobStatus: "pending",
            jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            createdAt: "2024-01-01T00:00:00Z",
            updatedAt: "2024-01-01T00:00:00Z",
        };
        server
            .mockEndpoint()
            .post("/payment-gateway/validate")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.paymentGateway.validate.create({
            type: "document",
            document:
                "data:application/pdf;base64,JVBERi0xLjEKJcKlwrHDqwoKMSAwIG9iagogIDw8IC9UeXBlIC9DYXRhbG9nCiAgICAgL1BhZ2VzIDIgMCBSCiAgPj4KZW5kb2JqCgoyIDAgb2JqCiAgPDwgL1R5cGUgL1BhZ2VzCiAgICAgL0tpZHMgWzMgMCBSXQogICAgIC9Db3VudCAxCiAgICAgL01lZGlhQm94IFswIDAgMzAwIDE0NF0KICA+PgplbmRvYmoKCjMgMCBvYmoKICA8PCAgL1R5cGUgL1BhZ2UKICAgICAgL1BhcmVudCAyIDAgUgogICAgICAvUmVzb3VyY2VzCiAgICAgICA8PCAvRm9udAogICAgICAgICAgIDw8IC9GMQogICAgICAgICAgICAgICA8PCAvVHlwZSAvRm9udAogICAgICAgICAgICAgICAgICAvU3VidHlwZSAvVHlwZTEKICAgICAgICAgICAgICAgICAgL0Jhc2VGb250IC9UaW1lcy1Sb21hbgogICAgICAgICAgICAgICA+PgogICAgICAgICAgID4+CiAgICAgICA+PgogICAgICAvQ29udGVudHMgNCAwIFIKICA+PgplbmRvYmoKCjQgMCBvYmoKICA8PCAvTGVuZ3RoIDU1ID4+CnN0cmVhbQogIEJUCiAgICAvRjEgMTggVGYKICAgIDAgMCBUZAogICAgKEhlbGxvIFdvcmxkKSBUagogIEVUCmVuZHN0cmVhbQplbmRvYmoKCnhyZWYKMCA1CjAwMDAwMDAwMDAgNjU1MzUgZiAKMDAwMDAwMDAxOCAwMDAwMCBuIAowMDAwMDAwMDc3IDAwMDAwIG4gCjAwMDAwMDAxNzggMDAwMDAgbiAKMDAwMDAwMDQ1NyAwMDAwMCBuIAp0cmFpbGVyCiAgPDwgIC9Sb290IDEgMCBSCiAgICAgIC9TaXplIDUKICA+PgpzdGFydHhyZWYKNTY1CiUlRU9GCg==",
        });
        expect(response).toEqual({
            jobStatus: "pending",
            jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
            updatedAt: new Date("2024-01-01T00:00:00.000Z"),
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            jobStatus: "success",
            jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            paymentGatewayUrl: "https://www.payment-gateway.com/invoice/pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            card: { eligibility: "ACCEPTED", fee: { type: "percentage", value: 2.5 } },
            invoiceAmount: 150.75,
            gatewayAmount: 155.5,
            vendorName: "Acme Corporation",
            createdAt: "2024-01-01T00:00:00Z",
            updatedAt: "2024-01-01T00:00:00Z",
        };
        server
            .mockEndpoint()
            .get("/payment-gateway/validate/job_1a92b5f7-f522-435e-a953-fd649363730a")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.paymentGateway.validate.get("job_1a92b5f7-f522-435e-a953-fd649363730a");
        expect(response).toEqual({
            jobStatus: "success",
            jobId: "pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            paymentGatewayUrl: "https://www.payment-gateway.com/invoice/pgv_8f86116b-3b4d-4ded-99ef-3bc929d8c33c",
            card: {
                eligibility: "ACCEPTED",
                fee: {
                    type: "percentage",
                    value: 2.5,
                },
            },
            invoiceAmount: 150.75,
            gatewayAmount: 155.5,
            vendorName: "Acme Corporation",
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
            updatedAt: new Date("2024-01-01T00:00:00.000Z"),
        });
    });
});
