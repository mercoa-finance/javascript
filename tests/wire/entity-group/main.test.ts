/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("EntityGroup", () => {
    test("getAll", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            count: 3,
            hasMore: false,
            data: [
                {
                    id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
                    foreignId: "your-group-id",
                    name: "AcmeConglomerate",
                    emailToName: "acmegroup",
                    metadata: { key1: "value1" },
                    entities: [
                        {
                            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                            foreignId: "MY-DB-ID-12345",
                            name: "Acme Inc.",
                            email: "customer@acme.com",
                            acceptedTos: true,
                            status: "verified",
                            isCustomer: true,
                            isPayor: true,
                            isPayee: false,
                            isNetworkPayor: false,
                            isNetworkPayee: false,
                            accountType: "business",
                            updatedAt: "2024-01-02T00:00:00Z",
                            createdAt: "2024-01-01T00:00:00Z",
                            profile: {
                                business: {
                                    email: "customer@acme.com",
                                    legalBusinessName: "Acme Inc.",
                                    businessType: "llc",
                                    phone: { countryCode: "1", number: "4155551234" },
                                    address: {
                                        addressLine1: "123 Main St",
                                        addressLine2: "Unit 1",
                                        city: "San Francisco",
                                        stateOrProvince: "CA",
                                        postalCode: "94105",
                                        country: "US",
                                    },
                                    taxIDProvided: true,
                                    taxId: { ein: { number: "12-3456789" } },
                                    ownersProvided: true,
                                },
                            },
                        },
                        {
                            id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                            foreignId: "MY-DB-ID-90909",
                            name: "Big Box Store",
                            email: "vendor@bigboxstore.com",
                            acceptedTos: false,
                            status: "unverified",
                            isCustomer: false,
                            isPayor: false,
                            isPayee: true,
                            isNetworkPayor: false,
                            isNetworkPayee: false,
                            accountType: "business",
                            updatedAt: "2024-01-02T00:00:00Z",
                            createdAt: "2024-01-01T00:00:00Z",
                            profile: {
                                business: {
                                    email: "vendor@bigboxstore.com",
                                    legalBusinessName: "Big Box Store",
                                    businessType: "publicCorporation",
                                    taxIDProvided: false,
                                    ownersProvided: false,
                                },
                            },
                        },
                    ],
                },
            ],
        };
        server.mockEndpoint().get("/entityGroups").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.entityGroup.getAll();
        expect(response).toEqual({
            count: 3,
            hasMore: false,
            data: [
                {
                    id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
                    foreignId: "your-group-id",
                    name: "AcmeConglomerate",
                    emailToName: "acmegroup",
                    metadata: {
                        key1: "value1",
                    },
                    entities: [
                        {
                            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                            foreignId: "MY-DB-ID-12345",
                            name: "Acme Inc.",
                            email: "customer@acme.com",
                            acceptedTos: true,
                            status: "verified",
                            isCustomer: true,
                            isPayor: true,
                            isPayee: false,
                            isNetworkPayor: false,
                            isNetworkPayee: false,
                            accountType: "business",
                            updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                            createdAt: new Date("2024-01-01T00:00:00.000Z"),
                            profile: {
                                business: {
                                    email: "customer@acme.com",
                                    legalBusinessName: "Acme Inc.",
                                    businessType: "llc",
                                    phone: {
                                        countryCode: "1",
                                        number: "4155551234",
                                    },
                                    address: {
                                        addressLine1: "123 Main St",
                                        addressLine2: "Unit 1",
                                        city: "San Francisco",
                                        stateOrProvince: "CA",
                                        postalCode: "94105",
                                        country: "US",
                                    },
                                    taxIdProvided: true,
                                    taxId: {
                                        ein: {
                                            number: "12-3456789",
                                        },
                                    },
                                    ownersProvided: true,
                                },
                            },
                        },
                        {
                            id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                            foreignId: "MY-DB-ID-90909",
                            name: "Big Box Store",
                            email: "vendor@bigboxstore.com",
                            acceptedTos: false,
                            status: "unverified",
                            isCustomer: false,
                            isPayor: false,
                            isPayee: true,
                            isNetworkPayor: false,
                            isNetworkPayee: false,
                            accountType: "business",
                            updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                            createdAt: new Date("2024-01-01T00:00:00.000Z"),
                            profile: {
                                business: {
                                    email: "vendor@bigboxstore.com",
                                    legalBusinessName: "Big Box Store",
                                    businessType: "publicCorporation",
                                    taxIdProvided: false,
                                    ownersProvided: false,
                                },
                            },
                        },
                    ],
                },
            ],
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        };
        const rawResponseBody = {
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: { key1: "value1" },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIDProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/entityGroup")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.create({
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        });
        expect(response).toEqual({
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: {
                key1: "value1",
            },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIdProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: { key1: "value1" },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIDProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/entityGroup/entg_a3582b70-fd04-4888-9185-a640ae9048be")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.get("entg_a3582b70-fd04-4888-9185-a640ae9048be");
        expect(response).toEqual({
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: {
                key1: "value1",
            },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIdProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = { foreignId: "your-group-id", name: "AcmeConglomerate", emailToName: "acmegroup" };
        const rawResponseBody = {
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: { key1: "value1" },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIDProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/entityGroup/entg_a3582b70-fd04-4888-9185-a640ae9048be")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.update("entg_a3582b70-fd04-4888-9185-a640ae9048be", {
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
        });
        expect(response).toEqual({
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: {
                key1: "value1",
            },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIdProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server.mockEndpoint().delete("/entityGroup/entityGroupId").respondWith().statusCode(200).build();

        const response = await client.entityGroup.delete("entityGroupId");
        expect(response).toEqual(undefined);
    });

    test("getToken", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = { expiresIn: "1h" };
        const rawResponseBody =
            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o";
        server
            .mockEndpoint()
            .post("/entityGroup/entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced/token")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.getToken("entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            expiresIn: "1h",
        });
        expect(response).toEqual(
            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o",
        );
    });

    test("addEntities", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        };
        const rawResponseBody = {
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: { key1: "value1" },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIDProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/entityGroup/entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced/addEntities")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.addEntities("entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        });
        expect(response).toEqual({
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: {
                key1: "value1",
            },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIdProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        });
    });

    test("removeEntities", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        };
        const rawResponseBody = {
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: { key1: "value1" },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIDProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/entityGroup/entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced/removeEntities")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entityGroup.removeEntities("entg_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            entityIds: ["ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d"],
        });
        expect(response).toEqual({
            id: "entg_a3582b70-fd04-4888-9185-a640ae9048be",
            foreignId: "your-group-id",
            name: "AcmeConglomerate",
            emailToName: "acmegroup",
            metadata: {
                key1: "value1",
            },
            entities: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                },
                {
                    id: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                    foreignId: "MY-DB-ID-90909",
                    name: "Big Box Store",
                    email: "vendor@bigboxstore.com",
                    acceptedTos: false,
                    status: "unverified",
                    isCustomer: false,
                    isPayor: false,
                    isPayee: true,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "vendor@bigboxstore.com",
                            legalBusinessName: "Big Box Store",
                            businessType: "publicCorporation",
                            taxIdProvided: false,
                            ownersProvided: false,
                        },
                    },
                },
            ],
        });
    });
});
