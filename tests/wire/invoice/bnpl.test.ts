/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("Bnpl", () => {
    test("offer", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            cadence: "WEEKLY",
            installmentsStartDate: "2025-06-18",
            numberOfInstallments: 4,
            paymentDayOfWeek: "WEDNESDAY",
            downPaymentDueDate: "2025-06-11",
        };
        const rawResponseBody = {
            invoiceAmount: 120000,
            totalRepaymentAmount: 121687,
            currency: "USD",
            downPaymentAmount: 12000,
            numberOfPayments: 5,
            firstPaymentDate: "2025-06-18",
            finalPaymentDate: "2025-07-28",
            paymentDayOfWeek: "WEDNESDAY",
            installmentAmount: 27422,
            financeFeeRate: "1.4% per 28 days",
            fees: { baseFeeAmount: 1687, baseFeePercentage: 1.4058 },
            termsLink: "https://dashboard-stg.oatfi.com/terms/6858b8b7e09d9a0057d82e65",
            installments: [
                { number: 0, dueDate: "2025-06-18", amount: 12000, type: "DOWN_PAYMENT" },
                { number: 1, dueDate: "2025-07-02", amount: 27422, type: "REGULAR" },
                { number: 2, dueDate: "2025-07-09", amount: 27422, type: "REGULAR" },
                { number: 3, dueDate: "2025-07-16", amount: 27422, type: "REGULAR" },
                { number: 4, dueDate: "2025-07-23", amount: 27421, type: "REGULAR" },
            ],
        };
        server
            .mockEndpoint()
            .post("/invoice/in_286a1849-2e3c-48a4-ab5a-8b7940cc3a5b/bnpl/offer")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.invoice.bnpl.offer("in_286a1849-2e3c-48a4-ab5a-8b7940cc3a5b", {
            cadence: "WEEKLY",
            installmentsStartDate: "2025-06-18",
            numberOfInstallments: 4,
            paymentDayOfWeek: "WEDNESDAY",
            downPaymentDueDate: "2025-06-11",
        });
        expect(response).toEqual({
            invoiceAmount: 120000,
            totalRepaymentAmount: 121687,
            currency: "USD",
            downPaymentAmount: 12000,
            numberOfPayments: 5,
            firstPaymentDate: "2025-06-18",
            finalPaymentDate: "2025-07-28",
            paymentDayOfWeek: "WEDNESDAY",
            installmentAmount: 27422,
            financeFeeRate: "1.4% per 28 days",
            fees: {
                baseFeeAmount: 1687,
                baseFeePercentage: 1.4058,
            },
            termsLink: "https://dashboard-stg.oatfi.com/terms/6858b8b7e09d9a0057d82e65",
            installments: [
                {
                    number: 0,
                    dueDate: "2025-06-18",
                    amount: 12000,
                    type: "DOWN_PAYMENT",
                },
                {
                    number: 1,
                    dueDate: "2025-07-02",
                    amount: 27422,
                    type: "REGULAR",
                },
                {
                    number: 2,
                    dueDate: "2025-07-09",
                    amount: 27422,
                    type: "REGULAR",
                },
                {
                    number: 3,
                    dueDate: "2025-07-16",
                    amount: 27422,
                    type: "REGULAR",
                },
                {
                    number: 4,
                    dueDate: "2025-07-23",
                    amount: 27421,
                    type: "REGULAR",
                },
            ],
        });
    });

    test("loan", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            loanId: "684adb5d70a01b00596a3106",
            businessExternalId: "ent_9a718f18-cd03-4b4d-98a6-32248969cbac",
            dueDate: 1752724800000,
            originalPrincipalBalance: 914,
            drawDate: 1749736285033,
            repaidAmount: 0,
            paymentMethodId: "68483ffc9b7d57005896805d",
            repaymentMethodId: "684adaf3cf8a670059e7f044",
            status: "PENDING",
            outstandingBalance: { principalBalance: 823, feeBalance: 13, totalBalance: 927, lateFeeBalance: 0 },
            termsAgreementFile:
                "https://persist-agreement-signature-oatfi-api-stg.s3.us-east-1.amazonaws.com/loan%3A%3A684adb5d70a01b00596a3106-1749736285241.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAXHRI6YYRXZIPAOTZ%2F20250612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250612T135329Z&X-Amz-Expires=900&X-Amz-Signature=eb7c598665ea380ae24f2911488707e72f5b1fd9bf6fe42de27e4ded6996dee7&X-Amz-SignedHeaders=host&x-id=GetObject",
            invoiceUrl:
                "https://persist-invoice-pdf-oatfi-api-stg.s3.us-east-1.amazonaws.com/invoice_pdf_evidence/682354a387e0050058fbff2e/684adb5d70a01b00596a3106_2025-06-12T13%3A51%3A25.067Z.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAXHRI6YYRXZIPAOTZ%2F20250612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250612T135329Z&X-Amz-Expires=900&X-Amz-Signature=337e598acf2feaff5b234a3ecad49d6667850c47dbacb888e6ebd75224e10f74&X-Amz-SignedHeaders=host&x-id=GetObject",
            invoiceAmount: 914,
            invoiceExternalId: "in_5c0e0b6c-6348-47e4-b39b-97e3d69edabd",
            invoiceDueDate: 1749709258847,
            downPaymentAmount: 91,
            cadence: "WEEKLY",
            baseFeeRate: 1.339283,
            installments: [
                {
                    number: 0,
                    startDate: 1749700800000,
                    dueDate: 1749700800000,
                    maturityDate: 1749700800000,
                    outstandingBalance: 91,
                    amount: 91,
                    status: "PENDING",
                    type: "DOWN_PAYMENT",
                    totalPaid: { principalBalance: 0, dueInterest: 0, totalLateFees: 0, feeAmount: 0 },
                },
                {
                    number: 1,
                    startDate: 1750392000000,
                    dueDate: 1750910400000,
                    maturityDate: 1751342400000,
                    outstandingBalance: 209,
                    amount: 209,
                    status: "PENDING",
                    type: "REGULAR",
                    totalPaid: { principalBalance: 0, dueInterest: 0, totalLateFees: 0, feeAmount: 0 },
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/bnpl/loan/684adb5d70a01b00596a3106")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.invoice.bnpl.loan("684adb5d70a01b00596a3106");
        expect(response).toEqual({
            loanId: "684adb5d70a01b00596a3106",
            businessExternalId: "ent_9a718f18-cd03-4b4d-98a6-32248969cbac",
            dueDate: 1752724800000,
            originalPrincipalBalance: 914,
            drawDate: 1749736285033,
            repaidAmount: 0,
            paymentMethodId: "68483ffc9b7d57005896805d",
            repaymentMethodId: "684adaf3cf8a670059e7f044",
            status: "PENDING",
            outstandingBalance: {
                principalBalance: 823,
                feeBalance: 13,
                totalBalance: 927,
                lateFeeBalance: 0,
            },
            termsAgreementFile:
                "https://persist-agreement-signature-oatfi-api-stg.s3.us-east-1.amazonaws.com/loan%3A%3A684adb5d70a01b00596a3106-1749736285241.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAXHRI6YYRXZIPAOTZ%2F20250612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250612T135329Z&X-Amz-Expires=900&X-Amz-Signature=eb7c598665ea380ae24f2911488707e72f5b1fd9bf6fe42de27e4ded6996dee7&X-Amz-SignedHeaders=host&x-id=GetObject",
            invoiceUrl:
                "https://persist-invoice-pdf-oatfi-api-stg.s3.us-east-1.amazonaws.com/invoice_pdf_evidence/682354a387e0050058fbff2e/684adb5d70a01b00596a3106_2025-06-12T13%3A51%3A25.067Z.pdf?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAXHRI6YYRXZIPAOTZ%2F20250612%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250612T135329Z&X-Amz-Expires=900&X-Amz-Signature=337e598acf2feaff5b234a3ecad49d6667850c47dbacb888e6ebd75224e10f74&X-Amz-SignedHeaders=host&x-id=GetObject",
            invoiceAmount: 914,
            invoiceExternalId: "in_5c0e0b6c-6348-47e4-b39b-97e3d69edabd",
            invoiceDueDate: 1749709258847,
            downPaymentAmount: 91,
            cadence: "WEEKLY",
            baseFeeRate: 1.339283,
            installments: [
                {
                    number: 0,
                    startDate: 1749700800000,
                    dueDate: 1749700800000,
                    maturityDate: 1749700800000,
                    outstandingBalance: 91,
                    amount: 91,
                    status: "PENDING",
                    type: "DOWN_PAYMENT",
                    totalPaid: {
                        principalBalance: 0,
                        dueInterest: 0,
                        totalLateFees: 0,
                        feeAmount: 0,
                    },
                },
                {
                    number: 1,
                    startDate: 1750392000000,
                    dueDate: 1750910400000,
                    maturityDate: 1751342400000,
                    outstandingBalance: 209,
                    amount: 209,
                    status: "PENDING",
                    type: "REGULAR",
                    totalPaid: {
                        principalBalance: 0,
                        dueInterest: 0,
                        totalLateFees: 0,
                        feeAmount: 0,
                    },
                },
            ],
        });
    });
});
