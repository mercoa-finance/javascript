/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("EmailTemplate", () => {
    test("getAll", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = [
            {
                id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                templateType: "PAYMENT",
                name: "Generic Payment Email",
                subject: "Action Required - Your payment is due",
                content: "<h1>Your invoice has been sent.</h1>",
                isDefault: true,
            },
        ];
        server
            .mockEndpoint()
            .get("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/email-templates")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.emailTemplate.getAll("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced");
        expect(response).toEqual([
            {
                id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
                templateType: "PAYMENT",
                name: "Generic Payment Email",
                subject: "Action Required - Your payment is due",
                content: "<h1>Your invoice has been sent.</h1>",
                isDefault: true,
            },
        ]);
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        };
        const rawResponseBody = {
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        };
        server
            .mockEndpoint()
            .post("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/email-template")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.emailTemplate.create("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        });
        expect(response).toEqual({
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        };
        server
            .mockEndpoint()
            .get(
                "/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/email-template/emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            )
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.emailTemplate.get(
            "ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
            "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
        );
        expect(response).toEqual({
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        };
        const rawResponseBody = {
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        };
        server
            .mockEndpoint()
            .put(
                "/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/email-template/emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            )
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.emailTemplate.update(
            "ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
            "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            {
                templateType: "PAYMENT",
                name: "Generic Payment Email",
                subject: "Action Required - Your payment is due",
                content: "<h1>Your invoice has been sent.</h1>",
                isDefault: true,
            },
        );
        expect(response).toEqual({
            id: "emt_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            entityId: "ent_21661ac1-a2a8-4465-a6c0-64474ba8181d",
            templateType: "PAYMENT",
            name: "Generic Payment Email",
            subject: "Action Required - Your payment is due",
            content: "<h1>Your invoice has been sent.</h1>",
            isDefault: true,
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server
            .mockEndpoint()
            .delete("/entity/entityId/email-template/emailTemplateId")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.entity.emailTemplate.delete("entityId", "emailTemplateId");
        expect(response).toEqual(undefined);
    });
});
