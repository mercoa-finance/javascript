/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("Entity", () => {
    test("find", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            count: 1,
            hasMore: false,
            data: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: "2024-01-02T00:00:00Z",
                    createdAt: "2024-01-01T00:00:00Z",
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: { countryCode: "1", number: "4155551234" },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIDProvided: true,
                            taxId: { ein: { number: "12-3456789" } },
                            ownersProvided: true,
                        },
                    },
                    paymentMethods: [
                        {
                            id: "pm_4794d597-70dc-4fec-b6ec-c5988e759769",
                            type: "bankAccount",
                            accountName: "My Checking Account",
                            bankName: "Chase",
                            routingNumber: "12345678",
                            accountNumber: "99988767623",
                            accountType: "CHECKING",
                            status: "VERIFIED",
                            isDefaultSource: true,
                            isDefaultDestination: true,
                            supportedCurrencies: ["USD"],
                            metadata: {},
                            frozen: false,
                            confirmedByEntity: true,
                            createdAt: "2021-01-01T00:00:00Z",
                            updatedAt: "2021-01-01T00:00:00Z",
                        },
                    ],
                },
            ],
        };
        server.mockEndpoint().get("/entity").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.entity.find({
            isCustomer: true,
            foreignId: "MY-DB-ID-12345",
            paymentMethods: true,
        });
        expect(response).toEqual({
            count: 1,
            hasMore: false,
            data: [
                {
                    id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                    foreignId: "MY-DB-ID-12345",
                    name: "Acme Inc.",
                    email: "customer@acme.com",
                    acceptedTos: true,
                    status: "verified",
                    isCustomer: true,
                    isPayor: true,
                    isPayee: false,
                    isNetworkPayor: false,
                    isNetworkPayee: false,
                    accountType: "business",
                    updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                    profile: {
                        business: {
                            email: "customer@acme.com",
                            legalBusinessName: "Acme Inc.",
                            businessType: "llc",
                            phone: {
                                countryCode: "1",
                                number: "4155551234",
                            },
                            address: {
                                addressLine1: "123 Main St",
                                addressLine2: "Unit 1",
                                city: "San Francisco",
                                stateOrProvince: "CA",
                                postalCode: "94105",
                                country: "US",
                            },
                            taxIdProvided: true,
                            taxId: {
                                ein: {
                                    number: "12-3456789",
                                },
                            },
                            ownersProvided: true,
                        },
                    },
                    paymentMethods: [
                        {
                            type: "bankAccount",
                            id: "pm_4794d597-70dc-4fec-b6ec-c5988e759769",
                            accountName: "My Checking Account",
                            bankName: "Chase",
                            routingNumber: "12345678",
                            accountNumber: "99988767623",
                            accountType: "CHECKING",
                            status: "VERIFIED",
                            isDefaultSource: true,
                            isDefaultDestination: true,
                            supportedCurrencies: ["USD"],
                            metadata: {},
                            frozen: false,
                            confirmedByEntity: true,
                            createdAt: new Date("2021-01-01T00:00:00.000Z"),
                            updatedAt: new Date("2021-01-01T00:00:00.000Z"),
                        },
                    ],
                },
            ],
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            accountType: "business",
            foreignId: "MY-DB-ID-12345",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    website: "http://www.acme.com",
                    businessType: "llc",
                    phone: { countryCode: "1", number: "4155551234" },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxId: { ein: { number: "12-3456789" } },
                },
            },
        };
        const rawResponseBody = {
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: "2024-01-02T00:00:00Z",
            createdAt: "2024-01-01T00:00:00Z",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: { countryCode: "1", number: "4155551234" },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIDProvided: true,
                    taxId: { ein: { number: "12-3456789" } },
                    ownersProvided: true,
                },
            },
        };
        server
            .mockEndpoint()
            .post("/entity")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.create({
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            accountType: "business",
            foreignId: "MY-DB-ID-12345",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    website: "http://www.acme.com",
                    businessType: "llc",
                    phone: {
                        countryCode: "1",
                        number: "4155551234",
                    },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxId: {
                        ein: {
                            number: "12-3456789",
                        },
                    },
                },
            },
        });
        expect(response).toEqual({
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: new Date("2024-01-02T00:00:00.000Z"),
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: {
                        countryCode: "1",
                        number: "4155551234",
                    },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIdProvided: true,
                    taxId: {
                        ein: {
                            number: "12-3456789",
                        },
                    },
                    ownersProvided: true,
                },
            },
        });
    });

    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: "2024-01-02T00:00:00Z",
            createdAt: "2024-01-01T00:00:00Z",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: { countryCode: "1", number: "4155551234" },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIDProvided: true,
                    taxId: { ein: { number: "12-3456789" } },
                    ownersProvided: true,
                },
            },
        };
        server
            .mockEndpoint()
            .get("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.get("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced");
        expect(response).toEqual({
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: new Date("2024-01-02T00:00:00.000Z"),
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: {
                        countryCode: "1",
                        number: "4155551234",
                    },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIdProvided: true,
                    taxId: {
                        ein: {
                            number: "12-3456789",
                        },
                    },
                    ownersProvided: true,
                },
            },
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = {
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            accountType: "business",
            foreignId: "MY-DB-ID-12345",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    website: "http://www.acme.com",
                    businessType: "llc",
                    phone: { countryCode: "1", number: "4155551234" },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxId: { ein: { number: "12-3456789" } },
                },
            },
        };
        const rawResponseBody = {
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: "2024-01-02T00:00:00Z",
            createdAt: "2024-01-01T00:00:00Z",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: { countryCode: "1", number: "4155551234" },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIDProvided: true,
                    taxId: { ein: { number: "12-3456789" } },
                    ownersProvided: true,
                },
            },
        };
        server
            .mockEndpoint()
            .post("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.update("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            accountType: "business",
            foreignId: "MY-DB-ID-12345",
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    website: "http://www.acme.com",
                    businessType: "llc",
                    phone: {
                        countryCode: "1",
                        number: "4155551234",
                    },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxId: {
                        ein: {
                            number: "12-3456789",
                        },
                    },
                },
            },
        });
        expect(response).toEqual({
            id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            foreignId: "MY-DB-ID-12345",
            name: "Acme Inc.",
            email: "customer@acme.com",
            acceptedTos: true,
            status: "verified",
            isCustomer: true,
            isPayor: true,
            isPayee: false,
            isNetworkPayor: false,
            isNetworkPayee: false,
            accountType: "business",
            updatedAt: new Date("2024-01-02T00:00:00.000Z"),
            createdAt: new Date("2024-01-01T00:00:00.000Z"),
            profile: {
                business: {
                    email: "customer@acme.com",
                    legalBusinessName: "Acme Inc.",
                    businessType: "llc",
                    phone: {
                        countryCode: "1",
                        number: "4155551234",
                    },
                    address: {
                        addressLine1: "123 Main St",
                        addressLine2: "Unit 1",
                        city: "San Francisco",
                        stateOrProvince: "CA",
                        postalCode: "94105",
                        country: "US",
                    },
                    taxIdProvided: true,
                    taxId: {
                        ein: {
                            number: "12-3456789",
                        },
                    },
                    ownersProvided: true,
                },
            },
        });
    });

    test("delete", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server.mockEndpoint().delete("/entity/entityId").respondWith().statusCode(200).build();

        const response = await client.entity.delete("entityId");
        expect(response).toEqual(undefined);
    });

    test("acceptTermsOfService", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server
            .mockEndpoint()
            .post("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/accept-tos")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.entity.acceptTermsOfService("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced");
        expect(response).toEqual(undefined);
    });

    test("initiateKyb", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server
            .mockEndpoint()
            .post("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/request-kyb")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.entity.initiateKyb("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced");
        expect(response).toEqual(undefined);
    });

    test("getToken", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = { expiresIn: "1h" };
        const rawResponseBody =
            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o";
        server
            .mockEndpoint()
            .post("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/token")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.getToken("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            expiresIn: "1h",
        });
        expect(response).toEqual(
            "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o",
        );
    });

    test("getOnboardingLink", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody =
            "https://mercoa.com/onboarding/payor?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o";
        server
            .mockEndpoint()
            .get("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/onboarding")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.getOnboardingLink("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced", {
            type: "PAYOR",
            expiresIn: "1h",
        });
        expect(response).toEqual(
            "https://mercoa.com/onboarding/payor?token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTIzNDU2Nzg5LCJuYW1lIjoiSm9zZXBoIn0.OpOSSw7e485LOP5PrzScxHb7SR6sAOMRckfFwi4rp7o",
        );
    });

    test("sendOnboardingLink", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server.mockEndpoint().post("/entity/entityId/onboarding").respondWith().statusCode(200).build();

        const response = await client.entity.sendOnboardingLink("entityId", {
            type: "PAYEE",
        });
        expect(response).toEqual(undefined);
    });

    test("events", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = {
            data: [
                {
                    id: "evt_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
                    webhookIds: ["webhook_12345"],
                    userId: "user_e24fc81c-c5ee-47e8-af42-4fe29d895506",
                    data: {
                        id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                        foreignId: "MY-DB-ID-12345",
                        name: "Acme Inc.",
                        email: "customer@acme.com",
                        acceptedTos: true,
                        status: "verified",
                        isCustomer: true,
                        isPayor: true,
                        isPayee: false,
                        isNetworkPayor: false,
                        isNetworkPayee: false,
                        accountType: "business",
                        updatedAt: "2024-01-02T00:00:00Z",
                        createdAt: "2024-01-01T00:00:00Z",
                        profile: {
                            business: {
                                email: "customer@acme.com",
                                legalBusinessName: "Acme Inc.",
                                businessType: "llc",
                                phone: { countryCode: "1", number: "4155551234" },
                                address: {
                                    addressLine1: "123 Main St",
                                    addressLine2: "Unit 1",
                                    city: "San Francisco",
                                    stateOrProvince: "CA",
                                    postalCode: "94105",
                                    country: "US",
                                },
                                taxIDProvided: true,
                                taxId: { ein: { number: "12-3456789" } },
                                ownersProvided: true,
                            },
                        },
                    },
                    createdAt: "2024-01-01T00:00:00.000Z",
                },
            ],
            count: 1,
            hasMore: false,
        };
        server
            .mockEndpoint()
            .get("/entity/ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced/events")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.events("ent_a0f6ea94-0761-4a5e-a416-3c453cb7eced");
        expect(response).toEqual({
            data: [
                {
                    id: "evt_a0f6ea94-0761-4a5e-a416-3c453cb7eced",
                    webhookIds: ["webhook_12345"],
                    userId: "user_e24fc81c-c5ee-47e8-af42-4fe29d895506",
                    data: {
                        id: "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
                        foreignId: "MY-DB-ID-12345",
                        name: "Acme Inc.",
                        email: "customer@acme.com",
                        acceptedTos: true,
                        status: "verified",
                        isCustomer: true,
                        isPayor: true,
                        isPayee: false,
                        isNetworkPayor: false,
                        isNetworkPayee: false,
                        accountType: "business",
                        updatedAt: new Date("2024-01-02T00:00:00.000Z"),
                        createdAt: new Date("2024-01-01T00:00:00.000Z"),
                        profile: {
                            business: {
                                email: "customer@acme.com",
                                legalBusinessName: "Acme Inc.",
                                businessType: "llc",
                                phone: {
                                    countryCode: "1",
                                    number: "4155551234",
                                },
                                address: {
                                    addressLine1: "123 Main St",
                                    addressLine2: "Unit 1",
                                    city: "San Francisco",
                                    stateOrProvince: "CA",
                                    postalCode: "94105",
                                    country: "US",
                                },
                                taxIdProvided: true,
                                taxId: {
                                    ein: {
                                        number: "12-3456789",
                                    },
                                },
                                ownersProvided: true,
                            },
                        },
                    },
                    createdAt: new Date("2024-01-01T00:00:00.000Z"),
                },
            ],
            count: 1,
            hasMore: false,
        });
    });
});
