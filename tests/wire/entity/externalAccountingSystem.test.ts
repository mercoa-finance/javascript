/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MercoaClient } from "../../../src/Client";

describe("ExternalAccountingSystem", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = { type: "rutter", accessToken: "123" };
        server
            .mockEndpoint()
            .get("/entity/ent_8545a84e-a45f-41bf-bdf1-33b42a55812c/external-accounting-system")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.externalAccountingSystem.get("ent_8545a84e-a45f-41bf-bdf1-33b42a55812c");
        expect(response).toEqual({
            type: "rutter",
            accessToken: "123",
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });
        const rawRequestBody = { type: "rutter", accessToken: "123" };
        const rawResponseBody = { type: "rutter", accessToken: "123" };
        server
            .mockEndpoint()
            .post("/entity/ent_8545a84e-a45f-41bf-bdf1-33b42a55812c/external-accounting-system/create")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.externalAccountingSystem.create(
            "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
            {
                type: "rutter",
                accessToken: "123",
            },
        );
        expect(response).toEqual({
            type: "rutter",
            accessToken: "123",
        });
    });

    test("connect", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        const rawResponseBody = "https://quickbooks.com/authorize?client_id=123";
        server
            .mockEndpoint()
            .get("/entity/ent_8545a84e-a45f-41bf-bdf1-33b42a55812c/external-accounting-system/connect")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.entity.externalAccountingSystem.connect(
            "ent_8545a84e-a45f-41bf-bdf1-33b42a55812c",
        );
        expect(response).toEqual("https://quickbooks.com/authorize?client_id=123");
    });

    test("sync", async () => {
        const server = mockServerPool.createServer();
        const client = new MercoaClient({ token: "test", xApiVersion: "2024-08-01", environment: server.baseUrl });

        server
            .mockEndpoint()
            .get("/entity/ent_8545a84e-a45f-41bf-bdf1-33b42a55812c/external-accounting-system/sync")
            .respondWith()
            .statusCode(200)
            .build();

        const response = await client.entity.externalAccountingSystem.sync("ent_8545a84e-a45f-41bf-bdf1-33b42a55812c", {
            vendors: "pull",
            bills: "push",
            glAccounts: "pull",
        });
        expect(response).toEqual(undefined);
    });
});
